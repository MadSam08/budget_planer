/*
** BetTech v1.0.0 (https://www.bettech.com/)
** Copyright © 2020 BetTech Gaming (Pty) Ltd. All rights reserved.
** BetTech is a trademark of BetTech Gaming (Pty) Ltd in the United States and in other countries.
*/

using System.Diagnostics.CodeAnalysis;
using Newtonsoft.Json;

namespace BudgetPlaner.Models.ApiResponse
{
    /// <summary>
    ///     Represents an error response generated by the API.
    /// </summary>
    [ExcludeFromCodeCoverage]
    public class ApiErrorResponse
    {
        /// <summary>
        ///     Gets or sets a <see cref="string" /> representing the error code for this API error response.
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string? Code { get; set; }

        /// <summary>
        ///     Gets or sets an <see cref="ApiErrorResponse" />[] representing the set of API errors that caused this error.
        /// </summary>
        [JsonProperty(PropertyName = "innerErrors")]
        public ApiErrorResponse[] InnerErrors { get; set; }

        /// <summary>
        ///     Gets or sets a <see cref="string" /> representing the error message for this API error response.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string? Message { get; set; }

        /// <summary>
        ///     Gets or sets a <see cref="string" /> representing the immediate frames on the call stack.
        /// </summary>
        /// <remarks>Will always be an empty string unless the API is in debug mode.</remarks>
        [JsonProperty(PropertyName = "stack")]
        public string? Stack { get; set; }

        /// <summary>
        ///     Gets or sets an <see cref="int" /> representing the HTTP status code of the error, if applicable.
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public int StatusCode { get; set; }

        /// <summary>
        ///     Gets or sets a <see cref="string" /> representing the name of the target that generated the error for this API
        ///     error response.
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string? Target { get; set; }

        /// <summary>
        ///     Gets or sets a <see cref="string" /> representing the trace identifier used to help track the error.
        /// </summary>
        [JsonProperty(PropertyName = "traceIdentifier")]
        public string? TraceIdentifier { get; set; }
        
        /// <summary>
        ///     Gets or sets a <see cref="ApiErrorCustomState"/> representing the a custom state for validation
        ///     failures.
        /// </summary>
        [JsonProperty(PropertyName = "customState")]
        public object? CustomState { get; set; }

        /// <summary>
        ///     Gets or sets the details for error.
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public Dictionary<string, string>? Details { get; set; }

        /// <summary>
        ///     Serializes this object to a JSON string.
        /// </summary>
        /// <returns>A <see cref="string" /> representing the JSON serialized version of the object.</returns>
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this);
        }
    }
}