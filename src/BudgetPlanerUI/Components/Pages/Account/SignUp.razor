@layout RegistrationLayout
@page "/account/sign-up"

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - WealthPlan</title>
</head>
<body class="flex items-center justify-center min-h-screen bg-gray-100 bg-sign-up">
<div class="w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md">
    <h2 class="text-2xl font-bold text-center text-gray-700">Create an Account</h2>
    <EditForm Model="@SignUpModel" FormName="singUp" class="space-y-4" OnValidSubmit="CreateUserAccount">
        <DataAnnotationsValidator/>
        <div>
            <label class="block text-sm font-medium text-gray-700">Email</label>
            <InputText @bind-Value="@SignUpModel.Email" type="email" placeholder="Enter your email" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></InputText>
            <ValidationMessage For="@(() => SignUpModel.Email)"></ValidationMessage>
        </div>
        <div>
            <label class="block text-sm font-medium text-gray-700">Password</label>
            <InputText @bind-Value="@SignUpModel.Password" type="password" placeholder="Enter your password" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></InputText>
            <ValidationMessage For="@(() => SignUpModel.Password)"></ValidationMessage>
        </div>
        <div>
            <label class="block text-sm font-medium text-gray-700">Confirm Password</label>
            <InputText @bind-Value="@SignUpModel.ConfirmPassword" type="password" placeholder="Confirm your password" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"/>
            <ValidationMessage For="@(() => SignUpModel.ConfirmPassword)"></ValidationMessage>
        </div>
        <button type="submit" class="w-full px-4 py-2 text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">Sign Up</button>
        <p class="text-sm text-center text-gray-600">Already have an account? <a href="/account/sign-in" class="text-blue-600 hover:underline">Sign In</a></p>
    </EditForm>

    <PopupMessage @ref="_popupMessage" MessageTitle="Login Success" MessageText="You have successfully logged in." IsSuccess="true" IsVisible="false"/>
</div>
</body>
</html>


@code {
    [Parameter] public SignUpModel SignUpModel { get; set; } = new();

    [Inject] private IIdentityService IdentityService { get; set; } = default!;

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;

    private PopupMessage? _popupMessage;

    private async Task CreateUserAccount(EditContext obj)
    {
        var success = await IdentityService.SignUpAsync(new RegisterRequest
        {
            Email = SignUpModel.Email,
            Password = SignUpModel.Password
        });

        if (success)
        {
            if (_popupMessage != null)
            {
                _popupMessage.MessageTitle = "Sign Up Success";
                _popupMessage.MessageText = "You have successfully logged in.";
                _popupMessage.IsSuccess = true;
                await _popupMessage.ShowAsync();
                NavigationManager.NavigateTo("/account/sign-in");
            }
        }
        else
        {
            if (_popupMessage != null)
            {
                _popupMessage.MessageTitle = "Sign Up Failed";
                _popupMessage.MessageText = "Invalid credentials. Please try again.";
                _popupMessage.IsSuccess = false;
                await _popupMessage.ShowAsync();
            }
        }
    }
}